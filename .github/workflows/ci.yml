name: Events CI
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
      # Configures gradle with caching
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      # Run "gradlew publish" for origin/master and "gradlew build" for PRs or elsewhere
      - name: Execute Gradle ${{ (github.repository == 'PGMDev/Events' && github.ref == 'refs/heads/master') && 'Publish' || 'Build' }}
        run: ./gradlew ${{ (github.repository == 'PGMDev/Events' && github.ref == 'refs/heads/master') && 'publish' || 'build' }}
        env:
          GITHUB_TOKEN: ${{ (github.repository == 'PGMDev/Events' && github.ref == 'refs/heads/master') && secrets.GITHUB_TOKEN || '' }}
      - name: Create Release
        id: create_release
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: events-${{github.sha}}
          release_name: Release ${{github.sha}}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/libs/Events.jar
          asset_name: Events.jar
          asset_content_type: application/java-archive
